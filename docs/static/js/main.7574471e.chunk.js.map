{"version":3,"sources":["store/actions/loadActions.js","components/LeftNav/index.js","components/Card/index.js","pages/CurrentTemp/index.js","components/Graph/graphOptions.js","components/Graph/Graph.js","utils/rarefyData.js","hooks/useChartData.js","utils/createSubset.js","utils/getYAxisLimits.js","components/Graph/LastDayGraphs.js","components/Graph/Last30MinGraphs.js","pages/Statistics/index.js","pages/Landing/index.js","App.js","reportWebVitals.js","store/reducers/loadReducer.js","store/reducers/rootReducer.js","index.js"],"names":["initialFetch","payload","type","data","incrementalFetch","LeftNav","className","to","activeClassName","Dropdown","id","items","text","itemToString","item","itemToElement","label","Card","children","cardInARow","defaultProps","CurrentTemp","error","length","Loading","active","withOverlay","message","current","Grid","Row","Date","timestamp","toLocaleDateString","toLocaleTimeString","temp","humidity","connect","state","ownProps","load","dispatch","fetchInit","fetchIncrement","baseGraphOptions","title","axes","bottom","mapsTo","scaleType","left","includeZero","curve","height","legend","enabled","tempGraphOptions","JSON","parse","stringify","getFillColor","getStrokeColor","domain","humidityGraphOptions","Graph","options","avg","arr","reduce","acc","val","useChartData","map","point","value","group","date","toISOString","findClosestPointToTime","currentTimestamp","currentIndex","createSubset","subsetTimeframeInMinute","startTime","safeStartTime","startIndex","endIndex","slice","getYAxisLimits","maxTempValue","Math","max","e","minTempValue","min","maxHumidityValue","LastDayGraph","rarefiedData","datapointFrequencyInMinute","Array","i","ceil","elementsToGetAverageFrom","currentElem","toFixed","push","averageData","tempData","humidityData","minHumidityValue","mergedTempOptions","mergedHumidityOptions","Last30MinGraphs","dataForLastHour","Statistics","LastDayGraphs","Landing","useState","isInited","setIsInited","useEffect","fetch","then","res","json","temperatureData","catch","err","listening","setListening","EventSource","onmessage","event","parsedData","ex","console","warn","path","isLoading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7574471e.chunk.js","sourcesContent":["export const initialFetch = payload => ({\n  type: 'INITIAL_FETCH',\n  data: payload,\n});\n\nexport const incrementalFetch = payload => ({\n  type: 'INCREMENTAL_FETCH',\n  data: payload,\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './style.scss';\nimport { Dropdown } from 'carbon-components-react';\n\nconst LeftNav = () => (\n  <>\n    <aside className=\"left-nav left-nav--desktop\">\n      <ul>\n        <li className=\"left-nav__item \">\n          <NavLink\n            to=\"/current\"\n            activeClassName=\"active\"\n            className=\"left-nav-item__link\"\n          >\n            Current temperature\n          </NavLink>\n        </li>\n        <li className=\"left-nav__item\">\n          <NavLink\n            to=\"/statistics\"\n            activeClassName=\"active\"\n            className=\"left-nav-item__link\"\n          >\n            Statistics\n          </NavLink>\n        </li>\n      </ul>\n    </aside>\n    <aside className=\"left-nav left-nav--mobile\">\n      <Dropdown\n        id=\"mobile-menu\"\n        items={[\n          { id: '/current', text: 'Current temperature' },\n          { id: '/statistics', text: 'Statistics' },\n        ]}\n        itemToString={item => (item ? item.text : '')}\n        itemToElement={item => (\n          <NavLink\n            to={item.id}\n            activeClassName=\"active\"\n            className=\"left-nav-item__link\"\n          >\n            {item.text}\n          </NavLink>\n        )}\n        label=\"\"\n      />\n    </aside>\n  </>\n);\n\nexport default LeftNav;\n","import React from 'react';\nimport './style.scss';\nimport * as PropTypes from 'prop-types';\n\nconst Card = ({ children, cardInARow }) => (\n  <div className={`card card--${cardInARow}`}>{children}</div>\n);\n\nCard.propTypes = {\n  children: PropTypes.node,\n  cardInARow: PropTypes.oneOf([1, 2, 3, 4, 6, 12]),\n};\n\nCard.defaultProps = {\n  children: '',\n  cardInARow: 4,\n};\n\nexport default Card;\n","import React from 'react';\nimport { Grid, Loading, Row } from 'carbon-components-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Card from '../../components/Card';\nimport './style.scss';\nimport {\n  incrementalFetch,\n  initialFetch,\n} from '../../store/actions/loadActions';\n\nconst CurrentTemp = ({ data, error }) => {\n  if (!error && !data.length) {\n    return <Loading active withOverlay />;\n  }\n\n  if (error) {\n    return `error: ${error.message || error}`;\n  }\n\n  const current = data[0] || {};\n\n  return (\n    <div className=\"page-inner\">\n      <Grid>\n        <Row>\n          <small className=\"timestamp\">\n            Last measurement at:{' '}\n            {`${new Date(+current.timestamp).toLocaleDateString()}, ${new Date(\n              +current.timestamp,\n            ).toLocaleTimeString()}`}\n          </small>\n        </Row>\n        <Row>\n          <Card>\n            <h2>Current temperature</h2>\n            <p className=\"centered\">{current.temp} °C</p>\n          </Card>\n          <Card>\n            <h2>Current humidity</h2>\n            <p className=\"centered\">{current.humidity}%</p>\n          </Card>\n        </Row>\n      </Grid>\n    </div>\n  );\n};\n\nCurrentTemp.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      temp: PropTypes.string,\n      humidity: PropTypes.string,\n      timestamp: PropTypes.string,\n    }),\n  ),\n  error: PropTypes.instanceOf(Object),\n};\n\nCurrentTemp.defaultProps = {\n  data: null,\n  error: null,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  data: state.load.data,\n  error: state.load.error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchInit: data => dispatch(initialFetch(data)),\n  fetchIncrement: data => dispatch(incrementalFetch(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentTemp);\n","const baseGraphOptions = {\n  title: 'History',\n  axes: {\n    bottom: {\n      title: 'Time',\n      mapsTo: 'date',\n      scaleType: 'time',\n    },\n    left: {\n      mapsTo: 'value',\n      scaleType: 'linear',\n      includeZero: false,\n    },\n  },\n  curve: 'curveNatural',\n  height: '20rem',\n  legend: {\n    enabled: false,\n  },\n};\n\nconst tempGraphOptions = {\n  ...JSON.parse(JSON.stringify(baseGraphOptions)),\n  getFillColor: () => '#005d5d',\n  getStrokeColor: () => '#003939',\n};\ntempGraphOptions.axes.left.domain = [20, 30];\n\nconst humidityGraphOptions = {\n  ...JSON.parse(JSON.stringify(baseGraphOptions)),\n  getFillColor: () => '#1192e8',\n  getStrokeColor: () => '#0f7dc7',\n};\nhumidityGraphOptions.axes.left.domain = [20, 40];\n\nexport { baseGraphOptions, tempGraphOptions, humidityGraphOptions };\n","import React from 'react';\nimport { LineChart } from '@carbon/charts-react';\nimport { PropTypes } from 'prop-types';\nimport { tempGraphOptions } from './graphOptions';\n\nconst Graph = ({ data, options }) => (\n  <LineChart data={data} options={options} />\n);\n\nGraph.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      temp: PropTypes.string,\n      humidity: PropTypes.string,\n      timestamp: PropTypes.string,\n    }),\n  ),\n  options: PropTypes.shape({}),\n};\n\nGraph.defaultProps = {\n  data: [],\n  options: tempGraphOptions,\n};\n\nexport default Graph;\n","const avg = arr => arr?.reduce((acc, val) => acc + val, 0) / arr?.length || 0;\n\nexport const rarefyData = (data, datapointFrequencyInMinute = 24 * 60) => {\n  if (!data || !(data instanceof Array)) {\n    return data;\n  }\n  const rarefiedData = [];\n  for (\n    let i = 0;\n    i < Math.ceil(data.length / datapointFrequencyInMinute);\n    // eslint-disable-next-line no-plusplus\n    i++\n  ) {\n    const currentElem = data[i * datapointFrequencyInMinute];\n    if (currentElem) {\n      rarefiedData.push(currentElem);\n    }\n  }\n\n  return rarefiedData;\n};\n\nexport const averageData = (data, datapointFrequencyInMinute = 24 * 60) => {\n  if (!data || !(data instanceof Array)) {\n    return data;\n  }\n  const rarefiedData = [];\n  for (\n    let i = 0;\n    i < Math.ceil(data.length / datapointFrequencyInMinute);\n    // eslint-disable-next-line no-plusplus\n    i++\n  ) {\n    const elementsToGetAverageFrom = data.slice(\n      i * datapointFrequencyInMinute,\n      i * datapointFrequencyInMinute + datapointFrequencyInMinute,\n    );\n    const currentElem = {\n      temp: avg(elementsToGetAverageFrom.map(e => +e.temp)).toFixed(1),\n      humidity: avg(elementsToGetAverageFrom.map(e => +e.humidity)).toFixed(1),\n      timestamp: avg(elementsToGetAverageFrom.map(e => +e.timestamp)).toFixed(),\n    };\n    if (currentElem) {\n      rarefiedData.push(currentElem);\n    }\n  }\n\n  return rarefiedData;\n};\n","const useChartData = data => {\n  const tempData = data.map(point => ({\n    value: +point.temp,\n    group: 'Temperature',\n    date: new Date(+point.timestamp).toISOString(),\n  }));\n  const humidityData = data.map(point => ({\n    value: +point.humidity,\n    group: 'Humidity',\n    date: new Date(+point.timestamp).toISOString(),\n  }));\n\n  return [tempData, humidityData];\n};\n\nexport default useChartData;\n","const findClosestPointToTime = (data, timestamp) => {\n  if (!data || data.length === 0) {\n    return data;\n  }\n  if (timestamp > +data[0].timestamp || !timestamp) {\n    return [data[0], 0];\n  }\n  if (timestamp < +data[data.length - 1].timestamp) {\n    return [data[data.length - 1], data.length - 1];\n  }\n  let currentTimestamp = +data[0].timestamp;\n  let currentIndex = 0;\n  while (currentTimestamp > timestamp) {\n    currentIndex += 1;\n    currentTimestamp = +data[currentIndex].timestamp;\n  }\n  return [data[currentIndex], currentIndex];\n};\n\nconst createSubset = (data, subsetTimeframeInMinute, startTime) => {\n  if (!data || data.length === 0) {\n    return data;\n  }\n  const safeStartTime = startTime || +data[0].timestamp;\n  // eslint-disable-next-line no-unused-vars\n  const [start, startIndex] = findClosestPointToTime(data, startTime);\n  // eslint-disable-next-line no-unused-vars\n  const [end, endIndex] = findClosestPointToTime(\n    data,\n    safeStartTime - subsetTimeframeInMinute * 60000,\n  );\n\n  return data.slice(startIndex, endIndex + 1);\n};\n\nexport default createSubset;\n","const getYAxisLimits = data => {\n  const maxTempValue = Math.max(...data.map(e => e.temp)) + 0.25;\n  const minTempValue = Math.min(...data.map(e => e.temp)) - 0.25;\n  const maxHumidityValue = Math.max(...data.map(e => e.humidity)) + 0.5;\n  const minHumidityValue = Math.min(...data.map(e => e.humidity)) - 0.5;\n\n  return [minTempValue, maxTempValue, minHumidityValue, maxHumidityValue];\n};\n\nexport default getYAxisLimits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Graph from './Graph';\nimport { averageData } from '../../utils/rarefyData';\nimport { humidityGraphOptions, tempGraphOptions } from './graphOptions';\nimport useChartData from '../../hooks/useChartData';\nimport './style.scss';\nimport createSubset from '../../utils/createSubset';\nimport Card from '../Card';\nimport getYAxisLimits from '../../utils/getYAxisLimits';\n\nconst LastDayGraph = ({ data }) => {\n  const rarefiedData = averageData(createSubset(data, 60 * 24), 60);\n  const [tempData, humidityData] = useChartData(rarefiedData);\n  const [\n    minTempValue,\n    maxTempValue,\n    minHumidityValue,\n    maxHumidityValue,\n  ] = getYAxisLimits(rarefiedData);\n\n  const mergedTempOptions = JSON.parse(JSON.stringify(tempGraphOptions));\n  mergedTempOptions.axes.left.domain = [+minTempValue, +maxTempValue];\n  const mergedHumidityOptions = JSON.parse(\n    JSON.stringify(humidityGraphOptions),\n  );\n  mergedHumidityOptions.axes.left.domain = [\n    +minHumidityValue,\n    +maxHumidityValue,\n  ];\n\n  return (\n    <div className=\"last-day-graphs graphs\">\n      <Card cardInARow={2}>\n        <Graph\n          data={tempData}\n          options={{ ...mergedTempOptions, title: 'Last day temperatures' }}\n        />\n      </Card>\n      <Card cardInARow={2}>\n        <Graph\n          data={humidityData}\n          options={{ ...mergedHumidityOptions, title: 'Last day humidity' }}\n        />\n      </Card>\n    </div>\n  );\n};\n\nLastDayGraph.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      temp: PropTypes.string,\n      humidity: PropTypes.string,\n      timestamp: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default LastDayGraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Graph from './Graph';\nimport createSubset from '../../utils/createSubset';\nimport { humidityGraphOptions, tempGraphOptions } from './graphOptions';\nimport useChartData from '../../hooks/useChartData';\nimport './style.scss';\nimport Card from '../Card';\nimport getYAxisLimits from '../../utils/getYAxisLimits';\n\nconst Last30MinGraphs = ({ data }) => {\n  const dataForLastHour = createSubset(data, 30);\n  const [tempData, humidityData] = useChartData(dataForLastHour);\n  const [\n    minTempValue,\n    maxTempValue,\n    minHumidityValue,\n    maxHumidityValue,\n  ] = getYAxisLimits(dataForLastHour);\n  const mergedTempOptions = JSON.parse(JSON.stringify(tempGraphOptions));\n  mergedTempOptions.axes.left.domain = [+minTempValue, +maxTempValue];\n  const mergedHumidityOptions = JSON.parse(\n    JSON.stringify(humidityGraphOptions),\n  );\n  mergedHumidityOptions.axes.left.domain = [\n    +minHumidityValue,\n    +maxHumidityValue,\n  ];\n\n  return (\n    <div className=\"last-hour-graphs graphs\">\n      <Card cardInARow={2}>\n        <Graph\n          data={tempData}\n          options={{ ...mergedTempOptions, title: 'Last 30 min temperatures' }}\n        />\n      </Card>\n      <Card cardInARow={2}>\n        <Graph\n          data={humidityData}\n          options={{ ...mergedHumidityOptions, title: 'Last 30 min humidity' }}\n        />\n      </Card>\n    </div>\n  );\n};\n\nLast30MinGraphs.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      temp: PropTypes.string,\n      humidity: PropTypes.string,\n      timestamp: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default Last30MinGraphs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Loading } from 'carbon-components-react';\nimport LastDayGraphs from '../../components/Graph/LastDayGraphs';\nimport Last30MinGraphs from '../../components/Graph/Last30MinGraphs';\nimport {\n  incrementalFetch,\n  initialFetch,\n} from '../../store/actions/loadActions';\n\nconst Statistics = ({ data }) => {\n  if (!data || !data.length) {\n    return <Loading active withOverlay />;\n  }\n\n  return (\n    <main>\n      <small className=\"timestamp timestamp--padded\">\n        Last measurement at:{' '}\n        {`${new Date(+data[0].timestamp).toLocaleDateString()}, ${new Date(\n          +data[0].timestamp,\n        ).toLocaleTimeString()}`}\n      </small>\n      <LastDayGraphs data={data} />\n      <Last30MinGraphs data={data} />\n    </main>\n  );\n};\n\nStatistics.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      temp: PropTypes.string,\n      humidity: PropTypes.string,\n      timestamp: PropTypes.string,\n    }),\n  ),\n};\n\nStatistics.defaultProps = {\n  data: null,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  data: state.load.data,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchInit: data => dispatch(initialFetch(data)),\n  fetchIncrement: data => dispatch(incrementalFetch(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Landing = () => <Redirect to=\"/current\" />;\n\nexport default Landing;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { initialFetch, incrementalFetch } from './store/actions/loadActions';\n\nimport './App.scss';\nimport LeftNav from './components/LeftNav';\nimport CurrentTemp from './pages/CurrentTemp';\nimport Statistics from './pages/Statistics';\nimport Landing from './pages/Landing';\n\nconst App = ({ fetchInit, fetchIncrement }) => {\n  const [isInited, setIsInited] = useState(false);\n\n  useEffect(() => {\n    if (!isInited) {\n      fetch('https://bence-temperature-api.herokuapp.com/api/getTemps')\n        .then(res => res.json())\n        .then(res => {\n          setIsInited(true);\n          fetchInit(res.temperatureData);\n        })\n        // eslint-disable-next-line no-console\n        .catch(err => {\n          setIsInited(true);\n          fetchInit({\n            data: null,\n            error: err,\n          });\n        });\n    }\n  }, [isInited]);\n\n  const [listening, setListening] = useState(false);\n  useEffect(() => {\n    if (!listening) {\n      const events = new EventSource(\n        'https://bence-temperature-api.herokuapp.com/api/events',\n      );\n      events.onmessage = event => {\n        let parsedData;\n        try {\n          parsedData = JSON.parse(event.data);\n          fetchIncrement(parsedData);\n        } catch (ex) {\n          // eslint-disable-next-line no-console\n          console.warn(ex);\n        }\n      };\n\n      setListening(true);\n    }\n  }, [listening]);\n\n  return (\n    <Router>\n      <LeftNav />\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/statistics\">\n            <Statistics />\n          </Route>\n          <Route path=\"/current\">\n            <CurrentTemp isLoading={false} />\n          </Route>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchInit: data => dispatch(initialFetch(data)),\n  fetchIncrement: data => dispatch(incrementalFetch(data)),\n});\n\nApp.propTypes = {\n  fetchInit: PropTypes.func.isRequired,\n  fetchIncrement: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  data: [],\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'INITIAL_FETCH':\n      return {\n        ...state,\n        data: action.data,\n        error: action.error || null,\n      };\n    case 'INCREMENTAL_FETCH':\n      return {\n        ...state,\n        data: [action.data].concat(state.data),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport load from './loadReducer';\n\nconst rootReducer = combineReducers({\n  load,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducers/rootReducer';\n\nconst store = createStore(\n  reducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}